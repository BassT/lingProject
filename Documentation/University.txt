=================
Domain University
=================

SPARQL query for "list all universities?"
              
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  PREFIX foaf: <http://xmlns.com/foaf/0.1/>
  PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
  PREFIX quepy: <http://www.machinalis.com/quepy#>
  PREFIX dbpedia: <http://dbpedia.org/ontology/>
  PREFIX dbpprop: <http://dbpedia.org/property/>
  PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
  
  SELECT DISTINCT ?x1 WHERE { 
    ?x0 rdf:type dbpedia-owl:University. ?x0 foaf:name ?x1. } 

Question template:

  regex =   (Question(Lemma("list")) + Lemma("all") + Lemma("university") + Question(Pos("."))) | \
            (Question(Lemma("list")) + Lemma("all") + Lemma("university") + Pos("IN") + Lemma("dbpedia") + Question(Pos("."))) 
    
Result:

+----------------------------------------------+
|                     x1                       |
+==============================================+
|"York University"                             |
+----------------------------------------------+
|"Yorkville University"                        |
+----------------------------------------------+
|"Academy of Performing Arts in Bratislava"    |   
+----------------------------------------------+
|"Akita International University"              |
+----------------------------------------------+
|"Altai State Academy of Education"            |
+----------------------------------------------+
|"American University"                         |
+----------------------------------------------+
|"American University of Beirut"               |
+----------------------------------------------+
|"Anglia Ruskin University"                    |
+----------------------------------------------+
|"Babson College"                              |
+----------------------------------------------+
|"First Nations University of Canada"          |
+----------------------------------------------+
|"Beijing Language and Culture University"     |
+----------------------------------------------+
|"Beit Berl"                                   |
+----------------------------------------------+
|"Berea College"                               |
+----------------------------------------------+
|"Berlin School of Economics and Law"          |
+----------------------------------------------+
|"Black Mountain College"                      |
+----------------------------------------------+
|"Bocconi University"                          |
+----------------------------------------------+

------------------------------------------------------------------------------------------------------------------------

SPARQL query for "How many postgraduate students in York University?"
             
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  PREFIX foaf: <http://xmlns.com/foaf/0.1/>
  PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
  PREFIX quepy: <http://www.machinalis.com/quepy#>
  PREFIX dbpedia: <http://dbpedia.org/ontology/>
  PREFIX dbpprop: <http://dbpedia.org/property/>
  PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
  
  SELECT DISTINCT ?x1 WHERE { 
    ?x0 rdf:type dbpedia-owl:University. ?x0 rdfs:label "York University"@en.
    ?x0 dbpedia-owl:numberOfPostgraduateStudents ?x1. } 

Question template:

  regex =   ((Lemmas("how many")| Lemmas("number of")) + Lemma("postgraduate") + Lemma("student") + Pos("IN") + University() + Question(Pos("."))) | \
            ((Lemmas("how many") | Lemmas("number of")) + Lemma("post") + (Lemma("grad") | Lemma("graduate")) + Lemma("student") + Pos("IN") + University() + Question(Pos(".")))
   
Result:

+------------------------------+
|               x1             |
+==============================+
|"6140"                        |
+------------------------------+

------------------------------------------------------------------------------------------------------------------------

SPARQL query for "How many undergraduate students in York University?"
              
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  PREFIX foaf: <http://xmlns.com/foaf/0.1/>
  PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
  PREFIX quepy: <http://www.machinalis.com/quepy#>
  PREFIX dbpedia: <http://dbpedia.org/ontology/>
  PREFIX dbpprop: <http://dbpedia.org/property/>
  PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
  
  SELECT DISTINCT ?x1 WHERE { 
    ?x0 rdf:type dbpedia-owl:University. ?x0 rdfs:label "York University"@en. 
    ?x0 dbpedia-owl:numberOfUndergraduateStudents ?x1. } 

Question template:

  regex =  ((Lemmas("how many") | Lemmas("number of")) + Lemma("undergraduate") + Lemma("student") + Pos("IN") + University() + Question(Pos("."))) | \
           ((Lemmas("how many")| Lemmas("number of")) + Lemma("under") + (Lemma("grad") | Lemma("graduate")) + Lemma("student") + Pos("IN") + University() + Question(Pos(".")))
   
Result:

+------------------------------+
|               x1             |
+==============================+
|"45890"                       |
+------------------------------+

------------------------------------------------------------------------------------------------------------------------

SPARQL query for "How many staff in York University?"
               
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  PREFIX foaf: <http://xmlns.com/foaf/0.1/>
  PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
  PREFIX quepy: <http://www.machinalis.com/quepy#>
  PREFIX dbpedia: <http://dbpedia.org/ontology/>
  PREFIX dbpprop: <http://dbpedia.org/property/>
  PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
  
  SELECT DISTINCT ?x1 WHERE { 
    ?x0 rdf:type dbpedia-owl:University. ?x0 rdfs:label "York University"@en. 
    ?x0 dbpedia-owl:staff ?x1. } 

Question template:

  regex =   ((Lemmas("how many") | Lemmas("number of")) + Lemma("staff") + Pos("IN") + University() + Question(Pos("."))) | \
            ((Lemmas("how many") | Lemmas("number of")) + Lemma("staff") + Lemma("work") + Pos("IN") + University() + Question(Pos(".")))
   
Result:

+------------------------------+
|               x1             |
+==============================+
|"7000"                        |
+------------------------------+

------------------------------------------------------------------------------------------------------------------------

SPARQL query for "What is York University colors?"
               
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  PREFIX foaf: <http://xmlns.com/foaf/0.1/>
  PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
  PREFIX quepy: <http://www.machinalis.com/quepy#>
  PREFIX dbpedia: <http://dbpedia.org/ontology/>
  PREFIX dbpprop: <http://dbpedia.org/property/>
  PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
  
  SELECT DISTINCT ?x1 WHERE {  
    ?x0 rdf:type dbpedia-owl:University. ?x0 rdfs:label "York University"@en. 
    ?x0 dbpedia-owl:officialSchoolColour ?x1. } 

Question template:

  regex =   (Lemmas("what be") + University() + (Lemma("colors")|Lemma("color")) + Question(Pos("."))) | \
            (Lemmas("what be") + Lemma("the") + (Lemma("colors")|Lemma("color")) + Pos("IN") + University() + Question(Pos(".")))
        
Result:

+------------------------------+
|               x1             |
+==============================+
|"Red and white"               |
+------------------------------+

------------------------------------------------------------------------------------------------------------------------

SPARQL query for "What is the motto of York University?"
                          
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  PREFIX foaf: <http://xmlns.com/foaf/0.1/>
  PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
  PREFIX quepy: <http://www.machinalis.com/quepy#>
  PREFIX dbpedia: <http://dbpedia.org/ontology/>
  PREFIX dbpprop: <http://dbpedia.org/property/>
  PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
  
  SELECT DISTINCT ?x1 WHERE { 
    ?x0 rdf:type dbpedia-owl:University. ?x0 rdfs:label "York University"@en. 
    ?x0 dbpprop:mottoeng ?x1. }  

Question template:

  regex =   (Lemmas("what be") + University() + Lemma("motto") + Question(Pos("."))) | \
            (Lemmas("what be") + Lemma("the") + Lemma("motto") + Pos("IN") + University() + Question(Pos(".")))

Result:

+------------------------------+
|               x1             |
+==============================+
|"The way must be tried"       |
+------------------------------+

------------------------------------------------------------------------------------------------------------------------

SPARQL query for "when was the establishment of McGill University?"
                             
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  PREFIX foaf: <http://xmlns.com/foaf/0.1/>
  PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
  PREFIX quepy: <http://www.machinalis.com/quepy#>
  PREFIX dbpedia: <http://dbpedia.org/ontology/>
  PREFIX dbpprop: <http://dbpedia.org/property/>
  PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
  
  SELECT DISTINCT ?x1 WHERE { 
    ?x0 rdf:type dbpedia-owl:University. ?x0 rdfs:label "McGill University"@en. 
    ?x0 dbpprop:established ?x1. } 

Question template:

  regex =   (Lemmas("when be") + Lemma("the") + Lemma("establishment") + Pos("IN") + University() + Question(Pos("."))) | \
            ((Lemma("which") | Lemmas("on which")) + Lemma("date") +  University() + Lemma("be") + Lemma("establish") + Question(Pos("."))) | \
            (Lemmas("when do") + University() + Lemma("establish") + Question(Pos(".")))
    
Result:

+------------------------------+
|               x1             |
+==============================+
|"1821"                        |
+------------------------------+

------------------------------------------------------------------------------------------------------------------------

SPARQL query for "What is the nickname of York University?"
             
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  PREFIX foaf: <http://xmlns.com/foaf/0.1/>
  PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
  PREFIX quepy: <http://www.machinalis.com/quepy#>
  PREFIX dbpedia: <http://dbpedia.org/ontology/>
  PREFIX dbpprop: <http://dbpedia.org/property/>
  PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
  
  SELECT DISTINCT ?x1 WHERE { 
    ?x0 rdf:type dbpedia-owl:University. ?x0 rdfs:label "York University"@en. 
    ?x0 foaf:nick ?x1. } 

Question template:

  regex =   (Lemmas("what be") + University() + Lemma("nickname") + Question(Pos("."))) | \
            (Lemmas("what be") + Lemma("the") + Lemma("nickname") + Pos("IN") + University() + Question(Pos(".")))

Result:

+------------------------------+
|               x1             |
+==============================+
|"York Lions"                  |
+------------------------------+

------------------------------------------------------------------------------------------------------------------------

SPARQL query for "What does York University own?"
                              
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  PREFIX foaf: <http://xmlns.com/foaf/0.1/>
  PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
  PREFIX quepy: <http://www.machinalis.com/quepy#>
  PREFIX dbpedia: <http://dbpedia.org/ontology/>
  PREFIX dbpprop: <http://dbpedia.org/property/>
  PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
  
  SELECT DISTINCT ?x2 WHERE { 
    ?x0 rdf:type dbpedia-owl:University. ?x0 rdfs:label "York University"@en. 
    ?x1 dbpedia-owl:owner ?x0. ?x1 rdfs:label ?x2. } 

Question template:

  regex =   (Lemmas("what do") + University() + Lemma("own") + Question(Pos("."))) | \
            (Question(Lemma("list")) + Lemma("some") + Lemma("property") + Lemma("own") + Pos("IN") + University() + Question(Pos(".")))
        
Result:

+------------------------------------------+
|                     x2                   |
+==========================================+
|"York Stadium"                            |
+------------------------------------------+
|"Tait McKenzie Centre"                    |               
+------------------------------------------+
|"Pan Am and Parapan Am Athletics Stadium" |
+------------------------------------------+

------------------------------------------------------------------------------------------------------------------------

SPARQL query for "what is the website of York University?"
                              
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  PREFIX foaf: <http://xmlns.com/foaf/0.1/>
  PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
  PREFIX quepy: <http://www.machinalis.com/quepy#>
  PREFIX dbpedia: <http://dbpedia.org/ontology/>
  PREFIX dbpprop: <http://dbpedia.org/property/>
  PREFIX dbpedia-owl: <http://dbpedia.org/ontology/>
  
  SELECT DISTINCT ?x1 WHERE { 
    ?x0 rdfs:label "York University"@en. ?x0 dbpedia-owl:wikiPageExternalLink ?x1. } 

Question template:

  regex =   (Lemmas("what be") +  Lemma("the") + (Lemma("link") | Lemma("website")) + Pos("IN") + Thing() + Question(Pos("."))) | \
            (Lemmas("what be") +  Lemma("the") + (Lemma("link") | Lemma("website")) + Pos("IN") + Thing() + Lemma("hotel") + Question(Pos(".")))
    
Result:

+---------------------------------------------------------------------------------------------------------------------------------+
|                                                           x1                                                                    |
+=================================================================================================================================+
|"http://www.yufa.org/"                                                                                                           |
+---------------------------------------------------------------------------------------------------------------------------------+
|"http://www.youtube.com/user/YorkUniversity"                                                                                     |
+---------------------------------------------------------------------------------------------------------------------------------+
|"http://www.yorku.ca/"                                                                                                           |   
+---------------------------------------------------------------------------------------------------------------------------------+
|"http://www.yorku.ca/laps/"                                                                                                      |
+---------------------------------------------------------------------------------------------------------------------------------+
|"http://www.imaginewithus.ca/"                                                                                                   |
+---------------------------------------------------------------------------------------------------------------------------------+
|"http://www.yorku.ca/scld/organizations/origanizations.php?view=549&key=&alpha=&clubsearch=Search&category=Religious&type=club"  |                      |
+---------------------------------------------------------------------------------------------------------------------------------+
|"http://www.osgoode.yorku.ca/faculty/Mosher_Janet.html"                                                                          |
+---------------------------------------------------------------------------------------------------------------------------------+